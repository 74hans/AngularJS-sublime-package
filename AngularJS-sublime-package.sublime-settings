{
	/**
		Basic Options
	**/

	// flag to add the `data-` prefix to the completions
	"enable_data_prefix": false,

	// directories you wish to ignore within your current working directory
	"exclude_dirs":[
		"node_modules/"
	],

	// file suffixes to ignore (uses string.endswith(...))
	"exclude_file_suffixes":[
		"angular.js",
		"min.js"
	],

	// Adds any indexed directives to the completion list
	"add_indexed_directives": true,

	// Shows preview of file where currently highlighted definition is
	// (Only works in Sublime Text 3)
	"show_file_preview": true,

	// AngularJS definitions to search for
	"match_definitions": ["controller", "directive", "module", "factory", "filter"],

	// flag to add AngularUI directives to completion list
	"enable_AngularUI_directives": false,

	// Characters considered to separate directives (words)
	// this is a modified version of what Sublime Text uses by default
	// It's modified to allow for - to be considered part of a word
	// for cases such as my-new-directive
	"non_word_chars": "[\\./\\\\(\\)\"':,;<>~!@#\\$%\\^&\\*\\|\\+=\\[\\]{}`~\\? ]",

	// turns completion help off
	"disable_plugin": false,



	/**
		Advanced Options (adjusting these could break the plugin)
	**/


	// {0} is the location of where the definition name will be inserted
	// ex: directive
	"match_expression": "((^[ \\\\t]*\\.{0}|^[ \\\\t]*{0}|angular\\.{0}|\\)\\.{0}|app\\.{0})[ ]*\\([ ]*[\"\\'])([\\w\\.\\$]*)([\"\\'])",

	// what group to expect the name in
	// ex: module('myApp')
	// myApp is currently in group 3 of the current 'match_expression'
	"match_expression_group": 3,

	// Good for debuggin if you're wanting to modify the scope options below
	// prints scopes to the console on each on_query_completion event
	"show_current_scope": false,

	


	/** ::NOTICE::
		Deprecating the scope options since they will most likely
		break functionality with the new features that have been added.
	**/

	// set to true to only show completions when ALL scopes are matched
	"ensure_all_scopes_are_matched": false,

	// defines what scopes to show completions in based on cursor placement in current buffer
	"attribute_defined_scopes": [
		"text.html meta.tag punctuation.definition.tag",
		"entity.other.attribute-name.html",
		"attibutes.tag.jade",
		"text.html meta.tag.inline",
		"text.html.basic meta.tag.block.any.html"
	],

	// defines a list of scopes that will should be avoided
	// such as no completions within double quotes
	"attribute_avoided_scopes": [
		"string.quoted.double.html"
	],

	// defines what scopes component completions reside in
	"component_defined_scopes": [
		"text.html.basic",
		// Allows completions when in partial HTML files
		"text.html.basic invalid.illegal.bad-angle-bracket.html",
		"source.jade"
	]
}